{"version":3,"sources":["components/SearchAvailability/ResultsItem.js","components/SearchAvailability/ResultsList.js","components/SearchAvailability/Searchbar.js","components/SearchAvailability/SearchPage.js","components/Bookings/PastBookingsButton.js","components/Bookings/UpcomingBookingsButton.js","components/SearchAvailability/SearchPageButton.js","components/AddEmployee/AddEmployeeButton.js","components/Dashboard.js","components/Layout/Header.js","components/Bookings/PastBookingsItem.js","components/Bookings/PastBookings.js","components/Profile/Profile.js","components/Profile/ProfilePage.js","components/Profile/ProfileEditPage.js","components/Bookings/UpcomingBookings.js","reducers/errorReducer.js","reducers/index.js","actions/types.js","store.js","components/Login/LoginForm.js","components/Register/RegisterForm.js","components/Homepage/Homepage.js","components/WeekCalendar/WeekCalendar.js","components/Worker/WorkerPage.js","components/Bookings/WorkerBooking.js","components/AddEmployee/AddEmployee.js","App.js","serviceWorker.js","index.js"],"names":["ResultsItem","className","this","props","name","id","desc","date","start","end","Component","createHistory","require","createBrowserHistory","SearchResultsList","onBook","bind","state","count","item","booking","custID","empID","bookingTime","startTime","bookingDate","workDate","console","log","axios","post","then","res","data","catch","err","error","push","pathUrl","window","location","href","list","map","newCount","setState","Fragment","index","key","onClick","to","listCount","service","endTime","Searchbar","onSubmit","e","preventDefault","searched","searchQuery","worker","time","validate","url","loading","get","results","alert","myChangeHandler","event","target","value","action","onChange","type","placeholder","pattern","required","title","ref","dateRef","SearchPage","ResultsList","0","businessName","1","2","PastBookingsButton","UpcomingBookingsButton","SearchPageButton","AddEmployeeButton","Dashboard","button","user","userType","pathname","username","Header","src","styles","icon","data-toggle","data-target","PastBookingsItem","empId","status","PastBookings","bookings","hasBookings","result","bookingStatus","Profile","phone","address","ProfilePage","uname","profile","fname","lname","userName","password","ProfileEditPage","mySubmitHandler","customer","firstName","lastName","put","Object","assign","htmlFor","UpcomingBookings","getBookings","forceUpdate","initialState","combineReducers","errors","payload","initalState","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","LoginForm","for","RegisterForm","pw","Homepage","WeekCalendar","rows","selectedRows","toggledClearRows","workingHours","convertData","dataSet","newData","i","length","day","moment","format","substr","parseInt","columns","selector","String","month","sortable","style","display","selectableRows","selectableRowsNoSelectAll","selectableRowsHighlight","onSelectedRowsChange","selectedCount","undefined","keys","handleSelection","clearSelectedRows","WorkerPage","match","params","AddEmployee","employee","admin","App","exact","path","component","ProfileEdit","WorkerBooking","Login","Register","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"obAkBeA,G,6KAZP,OACI,yBAAKC,UAAU,cACX,yCAAeC,KAAKC,MAAMC,MAC1B,uBAAGC,GAAG,QAAN,YAAuBH,KAAKC,MAAMG,MAClC,uBAAGD,GAAG,QAAN,SAAoBH,KAAKC,MAAMI,MAC/B,uBAAGF,GAAG,SAAN,UAAsBH,KAAKC,MAAMK,OACjC,uBAAGH,GAAG,OAAN,QAAkBH,KAAKC,MAAMM,U,GATnBC,cCCpBC,EAAgBC,EAAQ,IAAWC,qBAiF1BC,E,kDAzEX,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,OAAS,EAAKA,OAAOC,KAAZ,gBAEd,EAAKC,MAAQ,CACTC,MAAO,GALI,E,mDASZC,GAIH,IAAMC,EAAU,CACdC,OAAQ,OACRC,MAAOH,EAAKG,MACZC,YAAaJ,EAAKK,UAClBC,YAAaN,EAAKO,UAGpBC,QAAQC,IAAI,YAAaR,GAEzBS,IAAMC,KAAK,wCACHV,GAEDW,MAAK,SAAAC,GAEAL,QAAQC,IAAI,QAASI,EAAIC,SAI9BC,OAAM,SAAAC,GAAG,OAAIR,QAAQS,MAAM,UAAWD,MAK/BxB,IACN0B,KAAK,uBACb,IAAIC,EAAUC,OAAOC,SAASC,KAC9BF,OAAOC,SAASC,KAAOH,I,kCAIvBX,QAAQC,IAAI,MAAO1B,KAAKC,MAAMuC,KAAKC,KACnC,IAAIC,EAAW1C,KAAKe,MAAMC,MAAQ,EAKlC,OAJAhB,KAAK2C,SAAS,CACV3B,MAAO0B,IAGJ1C,KAAKe,MAAMC,Q,+BAGZ,IAAD,OACL,OACI,yBAAKjB,UAAU,eACX,kBAAC,IAAM6C,SAAP,KACC5C,KAAKC,MAAMuC,KAAKC,KAAI,SAACxB,EAAM4B,GAAP,OACb,kBAAC,IAAD,CAAMC,IAAKD,EAAOE,QAAS,WAAO,EAAKlC,OAAOI,IAAQ+B,GAAG,IAAIjD,UAAU,uBACnE,kBAAC,EAAD,CAAmBG,KAAMe,EAAKG,MAC9B0B,IAAK,EAAKG,UACV7C,KAAMa,EAAKiC,QACX7C,KAAMY,EAAKO,SACXlB,MAAOW,EAAKK,UACZf,IAAKU,EAAKkC,oB,GArEN3C,aCgJjB4C,E,kDA/IX,aAAe,IAAD,8BACV,gBAqBJC,SAAW,SAAAC,GAEPA,EAAEC,iBACF,EAAKxC,MAAMyC,UAAW,EAEtB,IAAMC,EAAc,CAChBP,QAAS,EAAKnC,MAAMmC,QACpBZ,SAAU,EAAKvB,MAAMuB,SACrBoB,OAAQ,EAAK3C,MAAM2C,OACnBC,KAAM,EAAK5C,MAAM4C,KACjBtD,KAAK,EAAKU,MAAMV,MAOpB,GAJAoB,QAAQC,IAAI+B,GAIT,EAAKG,WAAY,CAEhB,IAEMC,EAAM,+CAFE,EAAK9C,MAAM2C,OAE4C,IADrD,EAAK3C,MAAMmC,QAE3B,EAAKP,SAAS,CAAEmB,SAAS,IACzBnC,IAAMoC,IAAIF,EAAK,IAGdhC,MAAK,SAAAC,GACFL,QAAQC,IAAII,EAAIC,MAChB,EAAKY,SAAS,CACdqB,QAASlC,EAAIC,KACb+B,SAAS,EACTN,UAAU,OAGbxB,OAAM,SAACE,GACJT,QAAQC,IAAI,QAAQQ,WAIxB+B,MAAM,mBA7DA,EAiEdC,gBAAkB,SAAAC,GACd,EAAKxB,SAAL,eAAgBwB,EAAMC,OAAOlE,KAAOiE,EAAMC,OAAOC,SA/DjD,EAAKtD,MAAQ,CACTI,OAAQ,QACR+B,QAAS,GACTZ,SAAU,GACVoB,OAAQ,GACRC,KAAM,GACNtD,KAAM,GACNyD,SAAS,EACTN,UAAU,EACVQ,QAAS,KACTK,MAAM,IAbA,E,uDAmBV,OAAO,I,+BAgEP,OACI,6BACI,uBAAGlE,GAAG,gBAAN,gCACA,0BAAMmE,OAAO,GAAGjB,SAAWrD,KAAKqD,UAC5B,2BACAnD,KAAM,UACNmE,MAAUrE,KAAKe,MAAMmC,QACrBqB,SAAUvE,KAAKkE,gBACfM,KAAK,OACLC,YAAY,UACZC,QAAQ,YACRC,SAAS,WACTC,MAAM,iCAEN,2BACA1E,KAAM,WACNmE,MAAUrE,KAAKe,MAAMuB,SACrBiC,SAAUvE,KAAKkE,gBACfM,KAAK,OACLC,YAAY,WACZC,QAAQ,YACRC,SAAS,WACTC,MAAM,iCAEN,2BACA1E,KAAM,SACNmE,MAAUrE,KAAKe,MAAM2C,OACrBa,SAAUvE,KAAKkE,gBACfM,KAAK,OACLC,YAAY,SACZE,SAAS,WAETC,MAAM,iCAEN,2BACA1E,KAAM,OACNmE,MAAUrE,KAAKe,MAAM4C,KACrBY,SAAUvE,KAAKkE,gBACfM,KAAK,OACLC,YAAY,OACZE,SAAS,aAET,2BACAzE,KAAM,OACNmE,MAAUrE,KAAKe,MAAMV,KACrBkE,SAAUvE,KAAKkE,gBACfM,KAAK,OACLC,YAAY,OACZE,SAAS,WACTE,IAAK7E,KAAK8E,UAGV,4BAAQN,KAAK,UAAb,WAEHxE,KAAKgE,W,8BAnEd,IAAIA,EASJ,OARIhE,KAAKe,MAAMyC,WACXQ,EAAU,2DAGVhE,KAAKe,MAAMiD,UACbA,EAAU,kBAAC,EAAD,CAASxB,KAAMxC,KAAKe,MAAMiD,WAG/BA,M,GAjFSxD,aC0BTuE,E,uKARX,OACE,6BACE,kBAACC,EAAD,CAAahB,QAjBD,CACdiB,EAAG,CACDC,aAAc,UACd9E,KAAM,oHAER+E,EAAG,CACDD,aAAc,gBACd9E,KAAM,kGAERgF,EAAG,CACDF,aAAc,qBACd9E,KAAM,2G,GAhBWI,aCUV6E,EAVW,WACtB,OACI,kBAAC,IAAMzC,SAAP,KACA,kBAAC,IAAD,CAAMI,GAAG,gBACTjD,UAAU,uBADV,wBCOOuF,EAVe,WAC1B,OACI,kBAAC,IAAM1C,SAAP,KACA,kBAAC,IAAD,CAAMI,GAAG,oBACTjD,UAAU,uBADV,4BCOOwF,EAVS,WACpB,OACI,kBAAC,IAAM3C,SAAP,KACA,kBAAC,IAAD,CAAMI,GAAG,UACTjD,UAAU,uBADV,oBCOOyF,EAVU,WACrB,OACI,kBAAC,IAAM5C,SAAP,KACA,kBAAC,IAAD,CAAMI,GAAG,eACTjD,UAAU,uBADV,kBCyCO0F,E,uKAtCP,IAAIC,EAIJ,MAHgC,UAA7B1F,KAAKC,MAAM0F,KAAKC,WACfF,EAAS,kBAAC,EAAD,OAGT,yBAAK3F,UAAU,aACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,yBAAd,aACA,6BACA,kBAAC,IAAD,CAAMiD,GAAI,CACR6C,SAAS,YAAD,OAAc7F,KAAKC,MAAM0F,KAAKG,WAEtC/F,UAAU,uBAHZ,WAMA,6BACA,6BACA,kBAAC,EAAD,MACA,6BACA,6BACA,kBAAC,EAAD,MACA,6BACA,6BACA,kBAAC,EAAD,MACA,6BACA,6BACC2F,EACD,qC,GA/BAlF,a,iBC8BTuF,E,uKA/BP,OACI,6BACA,yBAAKhG,UAAY,wCACjB,yBAAKA,UAAU,aACX,uBAAGA,UAAU,eAAewC,KAAK,cACjC,yBAAKyD,IAAOC,IAAOC,QAEnB,4BAAQnG,UAAU,iBAAiByE,KAAK,SAAS2B,cAAY,WAAWC,cAAY,eAChF,0BAAMrG,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2BI,GAAG,cACzC,wBAAIJ,UAAU,sBACV,wBAAIA,UAAU,YACV,uBAAGA,UAAU,YAAYwC,KAAK,YAA9B,YAIJ,wBAAIxC,UAAU,YACV,uBAAGA,UAAU,WAAWwC,KAAK,SAA7B,mB,GArBN/B,aCWP6F,E,uKAXP,OACI,4BACA,wBAAIlG,GAAK,SAASH,KAAKC,MAAMqG,OAC7B,wBAAInG,GAAG,QAAQH,KAAKC,MAAMI,MAC1B,wBAAIF,GAAG,QAAQH,KAAKC,MAAM0D,MAC1B,wBAAIxD,GAAG,UAAUH,KAAKC,MAAMsG,a,GAPT/F,aCqEhBgG,E,kDAjEX,WAAYvG,GAAQ,IAAD,8BACf,cAAMA,IACDc,MAAQ,CACT0F,SAAU,MAHC,E,gEAOE,IAAD,OAGV5C,EAAM,uDAFE7D,KAAKC,MAAM0F,KAAKG,SAG9BnE,IAAMoC,IAAIF,EAAK,IAGZhC,MAAK,SAAAC,GACJ,EAAKa,SAAS,CACZ8D,SAAU3E,EAAIC,UAGjBC,OAAM,SAACE,GACNT,QAAQC,IAAI,QAAQQ,Q,+BAMlB,IAAD,OACDwE,EAAc1G,KAAKe,MAAM0F,SA6B7B,OACQ,6BACA,wBAAI1G,UAAU,yBAAd,iBA7Be,OAAhB2G,EACS,2BAAO3G,UAAY,SACvB,+BACI,4BACI,sCACA,oCACA,oCACA,wCAGR,+BAEI,EAAKgB,MAAM0F,SAAShE,KAAI,SAACkE,EAAQ9D,GAAT,OACpB,kBAAC,EAAD,CAAkBC,IAAMD,EAAOyD,MAASK,EAAOvF,MAC/Cf,KAAQsG,EAAOpF,YACfoC,KAAQgD,EAAOtF,YAEfkF,OAAUI,EAAOC,qBAMtB,8D,GArDIpG,aC6BZqG,EA9BC,SAAC5G,GACf,OACE,6BACE,2CAAiBA,EAAM6F,UACvB,6BACA,4BACE,wBAAIhD,IAAI,QAAR,SAAsB7C,EAAMC,MAC5B,wBAAI4C,IAAI,SAAR,UAAwB7C,EAAM6G,OAC9B,wBAAIhE,IAAI,WAAR,YAA4B7C,EAAM8G,UAEpC,6BACA,6BACA,kBAAC,IAAD,CAAM/D,GAAI,CACR6C,SAAS,YAAD,OAAc5F,EAAM6F,SAApB,UAER/F,UAAU,uBAHZ,gBAMA,+BCqCSiH,E,kDArDX,WAAY/G,GAAQ,IAAD,8BACf,cAAMA,IAEDc,MAAQ,CACTkG,MAAM,OACNC,QAAS,CACTC,MAAO,GACPC,MAAM,GACNlH,KAAK,GACL6G,QAAQ,GACRD,MAAM,GACNO,SAAS,GACTC,SAAS,GACTf,OAAO,GACPxE,KAAM,KAdK,E,gEAmBG,IAAD,OAIT8B,EAAM,sCADE7D,KAAKC,MAAM0F,KAAKG,SAE9BnE,IAAMoC,IAAIF,EAAK,IAGdhC,MAAK,SAAAC,GACJ,EAAKa,SAAS,CACZuE,QAASpF,EAAIC,UAGhBC,OAAM,SAACE,GACNT,QAAQC,IAAI,QAAQQ,Q,+BAKxB,OACI,yBAAK/B,GAAG,gBAEA,kBAAC,EAAD,CACA2F,SAAU9F,KAAKe,MAAMmG,QAAQG,SAC7BnH,KAAMF,KAAKe,MAAMmG,QAAQhH,KACzB6G,QAAS/G,KAAKe,MAAMmG,QAAQH,QAC5BD,MAAO9G,KAAKe,MAAMmG,QAAQJ,a,GA/CpBtG,aCwIX+G,G,wDArIX,WAAYtH,GAAQ,IAAD,8BACf,cAAMA,IA0CVuH,gBAAkB,SAAArD,GACdA,EAAMZ,iBAEN,IAAMkE,EAAW,CACbC,UAAW,EAAK3G,MAAMmG,QAAQQ,UAC9BC,SAAS,EAAK5G,MAAMmG,QAAQS,SAC5BzH,KAAM,EAAKa,MAAMmG,QAAQQ,UAAY,IAAM,EAAK3G,MAAMmG,QAAQS,SAC9DZ,QAAQ,EAAKhG,MAAMmG,QAAQH,QAC3BD,MAAM,EAAK/F,MAAMmG,QAAQJ,MACzBO,SAAS,EAAKtG,MAAMmG,QAAQG,SAC5BC,SAAS,EAAKvG,MAAMmG,QAAQI,UAEhC7F,QAAQC,IAAI+F,GAEZ9F,IAAMiG,IAAI,4CACNH,GAED5F,MAAK,SAAAC,GACLL,QAAQC,IAAII,GACbL,QAAQC,IAAII,EAAIC,SACfC,OAAM,SAAAC,GAAG,OAAIR,QAAQS,MAAMD,OA/Df,EAkEnBiC,gBAAkB,SAAAC,GAChB,EAAKxB,SAAS,CACZuE,QAASW,OAAOC,OAAO,GAAI,EAAK/G,MAAMmG,QAA7BW,OAAA,IAAAA,CAAA,GACR1D,EAAMC,OAAOlE,KAAOiE,EAAMC,OAAOC,WAlElC,EAAKtD,MAAQ,CACTkG,MAAO,OACPC,QAAS,CACTQ,UAAW,GACXC,SAAS,GACTzH,KAAK,GACL6G,QAAQ,GACRD,MAAM,GACNO,SAAS,GACTC,SAAS,GACTf,OAAO,GACPxE,KAAM,KAGV,EAAKmC,gBAAkB,EAAKA,gBAAgBpD,KAArB,gBACvB,EAAK0G,gBAAkB,EAAKA,gBAAgB1G,KAArB,gBAlBR,E,gEAqBG,IAAD,OAGT+C,EAAM,sCADE7D,KAAKe,MAAMkG,MAEzBtF,IAAMoC,IAAIF,EAAK,IAIdhC,MAAK,SAAAC,GAIJ,EAAKa,SAAS,CACZuE,QAASW,OAAOC,OAAO,GAAI,EAAK/G,MAAMmG,QAASpF,EAAIC,QAErDN,QAAQC,IAAI,UAAUI,EAAIC,SAE3BC,OAAM,SAACE,GACNT,QAAQC,IAAI,QAAQQ,Q,+BAuCxB,OACI,yBAAK/B,GAAG,iBACJ,mDACA,0BAAMkD,SAAUrD,KAAKwH,iBACjB,yBAAKzH,UAAU,cACf,2BAAOgI,QAAQ,aAAf,cACA,2BAAO7H,KAAK,YAAYsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAMmG,QAAQQ,UACpGrD,MAAOrE,KAAKe,MAAMmG,QAAQQ,aAE1B,6BACA,yBAAK3H,UAAU,cACf,2BAAOgI,QAAQ,YAAf,aACA,2BAAO7H,KAAK,WAAWsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAMmG,QAAQS,SACnGtD,MAAOrE,KAAKe,MAAMmG,QAAQS,YAE1B,6BACA,yBAAK5H,UAAU,cACf,2BAAOgI,QAAQ,WAAf,WACA,2BAAO7H,KAAK,UAAUsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAMmG,QAAQH,QAClG1C,MAAOrE,KAAKe,MAAMmG,QAAQH,WAE1B,6BACA,yBAAKhH,UAAU,cACf,2BAAOgI,QAAQ,SAAf,SACA,2BAAO7H,KAAK,QAAQsE,KAAK,QAAQD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAMmG,QAAQJ,MACjGzC,MAAOrE,KAAKe,MAAMmG,QAAQJ,SAE1B,6BACA,yBAAK/G,UAAU,cACf,2BAAOgI,QAAQ,YAAf,YACA,2BAAO7H,KAAK,WAAWsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAMmG,QAAQG,SACnGhD,MAAOrE,KAAKe,MAAMmG,QAAQG,YAE1B,6BACA,yBAAKtH,UAAU,cACf,2BAAOgI,QAAQ,MAAf,YACA,2BAAO7H,KAAK,KAAKsE,KAAK,WAAWD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAMmG,QAAQI,SACjGjD,MAAOrE,KAAKe,MAAMmG,QAAQI,YAE1B,6BACA,yBAAKvH,UAAU,cACf,2BAAOgI,QAAQ,aAAf,oBACA,2BAAO7H,KAAK,YAAYsE,KAAK,WAAWD,SAAUvE,KAAKkE,gBAAiBG,MAAOrE,KAAKe,MAAMmG,QAAQI,YAElG,6BACA,6BACA,6BACA,6BACA,2BAAO9C,KAAK,iB,GAhIFhE,cCFTwH,E,kDAEjB,aAAe,IAAD,8BACV,gBASJC,YAAc,SAAA3E,GAGV,EAAKX,SAAS,CAAEmB,SAAS,IACzBnC,IAAMoC,IAFM,+DAEG,IAGdlC,MAAK,SAAAC,GAEF,EAAKa,SAAS,CACdqB,QAASlC,EAAIC,KACb+B,SAAS,EACTN,UAAU,IACP,WACC/B,QAAQC,IAAI,gBAAiB,EAAKX,MAAMiD,SACxC,EAAKkE,oBAIZlG,OAAM,SAACE,GACJT,QAAQC,IAAI,QAAQQ,OA3BxB,EAAKnB,MAAQ,CACTiD,QAAS,IAGb,EAAKiE,cAPK,E,qDAqCV,OACI,6BACA,wBAAIlI,UAAU,yBAAd,qBAEIC,KAAKe,MAAMiD,QAAQvB,KAAI,SAACvB,EAAS2B,GAAV,OACnB,4BACI,wBAAIC,IAAKD,GACL,uBAAG1C,GAAK,SAAQ,4CAAqBe,EAAO,OAC5C,uBAAGf,GAAG,aAAY,2CAAoBe,EAAO,IAC7C,uBAAGf,GAAG,QAAO,qCAAce,EAAO,aAClC,uBAAGf,GAAG,QAAO,oCAAae,EAAO,aACjC,uBAAGf,GAAG,UAAS,uCAAgBe,EAAO,gBAE1C,sC,GApDsBV,a,wBCDxC2H,EAAe,GCCNC,cAAgB,CAC7BC,ODAa,WAAwC,IAA/BtH,EAA8B,uDAAtBoH,EAAc7D,EAAQ,uCACpD,OAAQA,EAAOE,MACb,IENsB,aFOpB,OAAOF,EAAOgE,QAEhB,QACE,OAAOvH,MGNPwH,EAAc,GACdC,EAAa,CAACC,KAqBLC,GAjBXrG,OAAOsG,UAAUC,UAAUC,SAAS,UAC9BC,YACNC,EACAR,EACAS,YACEC,IAAe,WAAf,EAAmBT,MCuBVU,E,uKAhCP,OACI,6BACI,0CACA,6BACI,0BAAM7F,SAAUrD,KAAKwH,iBACrB,6BACA,2BAAO2B,IAAI,SAAX,cACA,2BAAOjJ,KAAK,QAAQsE,KAAK,OAAOD,SAAUvE,KAAKkE,mBAE/C,6BACA,2BAAOiF,IAAI,MAAX,cACA,2BAAOjJ,KAAK,KAAKsE,KAAK,WAAWD,SAAUvE,KAAKkE,mBAEhD,yCACA,2BAAOM,KAAK,QAAQrE,GAAG,QAAQD,KAAK,WAAWmE,MAAM,UACrD,2BAAO8E,IAAI,SAAX,SAAgC,6BAChC,2BAAO3E,KAAK,QAAQrE,GAAG,SAASD,KAAK,WAAWmE,MAAM,QACtD,2BAAO8E,IAAI,UAAX,UAAkC,6BAClC,2BAAO3E,KAAK,QAAQrE,GAAG,WAAWD,KAAK,WAAWmE,MAAM,SACxD,2BAAO8E,IAAI,YAAX,YACA,6BACA,6BACA,6BACA,6BACA,2BAAO3E,KAAK,kB,GA1BRhE,aC6FT4I,E,kDA1FX,aAAe,IAAD,8BACV,gBAaJ5B,gBAAkB,SAAArD,GACdA,EAAMZ,iBAEN,IAAMkE,EAAW,CACbC,UAAW,EAAK3G,MAAMoG,MACtBQ,SAAS,EAAK5G,MAAMqG,MACpBL,QAAQ,EAAKhG,MAAMgG,QACnBD,MAAM,EAAK/F,MAAM+F,MACjBO,SAAS,EAAKtG,MAAMkG,MACpBK,SAAS,EAAKvG,MAAMsI,IAExB5H,QAAQC,IAAI+F,GAEZ9F,IAAMC,KAAK,yCACP6F,GAED5F,MAAK,SAAAC,GACLL,QAAQC,IAAII,GACbL,QAAQC,IAAII,EAAIC,SACfC,OAAM,SAAAC,GAAG,OAAIR,QAAQS,MAAMD,OAjCpB,EAoCdiC,gBAAkB,SAAAC,GACd,EAAKxB,SAAL,eAAgBwB,EAAMC,OAAOlE,KAAOiE,EAAMC,OAAOC,SAlCjD,EAAKtD,MAAQ,CAEToG,MAAO,GACPC,MAAM,GACNL,QAAQ,GACRD,MAAM,GACNG,MAAM,GACNoC,GAAG,IAVG,E,qDAyCV,OACI,yBAAKlJ,GAAG,iBACJ,0DACA,0BAAMkD,SAAUrD,KAAKwH,iBACjB,yBAAKzH,UAAU,cACf,2BAAOgI,QAAQ,SAAf,eACA,2BAAO7H,KAAK,QAAQsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBG,MAAOrE,KAAKe,MAAMoG,SAElF,6BACA,yBAAKpH,UAAU,cACf,2BAAOgI,QAAQ,SAAf,aACA,2BAAO7H,KAAK,QAAQsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBG,MAAOrE,KAAKe,MAAMqG,SAElF,6BACA,yBAAKrH,UAAU,cACf,2BAAOgI,QAAQ,WAAf,WACA,2BAAO7H,KAAK,UAAUsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBG,MAAOrE,KAAKe,MAAMgG,WAEpF,6BACA,yBAAKhH,UAAU,cACf,2BAAOgI,QAAQ,SAAf,SACA,2BAAO7H,KAAK,QAAQsE,KAAK,QAAQD,SAAUvE,KAAKkE,gBAAiBG,MAAOrE,KAAKe,MAAM+F,SAEnF,6BACA,yBAAK/G,UAAU,cACf,2BAAOgI,QAAQ,SAAf,YACA,2BAAO7H,KAAK,QAAQsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBG,MAAOrE,KAAKe,MAAMkG,SAElF,6BACA,yBAAKlH,UAAU,cACf,2BAAOgI,QAAQ,MAAf,YACA,2BAAO7H,KAAK,KAAKsE,KAAK,WAAWD,SAAUvE,KAAKkE,gBAAiBG,MAAOrE,KAAKe,MAAMsI,MAEnF,6BACA,yBAAKtJ,UAAU,cACf,2BAAOgI,QAAQ,aAAf,oBACA,2BAAO7H,KAAK,YAAYsE,KAAK,WAAWD,SAAUvE,KAAKkE,mBAEvD,6BACA,6BACA,6BACA,6BACA,2BAAOM,KAAK,iB,GArFLhE,aCeZ8I,E,uKAfP,OACI,6BACI,6BACI,wCACA,yCAEJ,6BACI,0CACA,mD,GAVG9I,a,0CC2KR+I,E,kDArKb,WAAYtJ,GAAQ,IAAD,8BACjB,cAAMA,IAmERoD,SAAW,SAAAC,GACTA,EAAEC,iBAIF,IAAMrC,EAAU,CACdC,OAAQ,EACRC,MAAO,EAAKL,MAAMuF,MAClBjF,YAAa,EAAKN,MAAM4C,KACxBpC,YAAa,EAAKR,MAAMV,MAK1BsB,IAAMC,KAAK,wCACHV,GAEDW,MAAK,SAAAC,GACLL,QAAQC,IAAII,GACbL,QAAQC,IAAII,EAAIC,SACfC,OAAM,SAAAC,GAAG,OAAIR,QAAQS,MAAMD,OArFlC,EAAKlB,MAAQ,CACX4C,KAAK,GACLtD,KAAK,GACLmJ,KAAK,GACLC,aAAc,GACdC,kBAAkB,EAClB3H,KAAM,GACNuE,MAAM,EAAKrG,MAAMmB,MACjBuI,aAAc,IAXC,E,gEAiBC,IAAD,OAKTrD,EAAQtG,KAAKe,MAAMuF,MACnBzC,EAAM,+CAAiDyC,EAC7D3E,IAAMoC,IAAIF,EAAK,IAGdhC,MAAK,SAAAC,GACJ,EAAKa,SAAS,CACZgH,aAAc7H,EAAIC,OACjB,WACDN,QAAQC,IAAI,EAAKX,MAAM4I,cACvB,EAAKC,YAAY,EAAK7I,MAAM4I,oBAG/B3H,OAAM,SAACE,GACNT,QAAQC,IAAI,QAAQQ,MAEtBlC,KAAK2C,SAAS,CAAC2D,MAAOA,M,kCAKduD,GAGV,IAFA,IAAIC,EAAU,GAENC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CAAC,IAAD,EAElCE,EAAMC,IAAOL,EAAQE,GAAR,UAAwBI,OAAO,YAAYC,OAAO,EAAE,GACjE/J,OAAI,EAINA,EADCgK,SAASJ,GAAO,GACVC,IAAOL,EAAQE,GAAR,UAAwBI,OAAO,YAAYC,OAAO,EAAE,GAG3DF,IAAOL,EAAQE,GAAR,UAAwBI,OAAO,YAAYC,OAAO,EAAE,GAGpEN,EAAQ3H,MAAR,mBAAe9B,EAAO6J,IAAOL,EAAQE,GAAR,UAAyB,SAASI,OAAO,UACtE,IAAMN,EAAQE,GAAR,SADN,wBAESF,EAAQE,GAAR,SAFT,IAKF/J,KAAK2C,SAAS,CAACZ,KAAM+H,M,+BAyDrB,IA5BQ,IAAD,OAIDQ,EAAU,CACd,CACEpK,KAAM,QACNqK,SAAUC,OAAON,MAAS7J,OAAS,KAAO6J,MAASO,QAAQ,IAC3DC,UAAU,IAoBNX,EAAI,EAAGA,EAAI,EAAGA,IACpBO,EAAQnI,KAAK,CACXjC,KAAMgK,MAAS7J,OAAS0J,EAAI,KAAOG,MAASO,QAAQ,GACpDF,SAAUC,OAAON,MAAS7J,OAAS0J,EAAI,KAAOG,MAASO,QAAQ,IAC/DC,UAAU,IAkBd,OACE,6BACA,wBAAIvK,GAAG,QAAQwK,MAAO,CAACC,QAAQ,SAAU5K,KAAKC,MAAMmB,OAClD,kBAAC,IAAD,CACEwD,MAAM,YACN0F,QAASA,EACTvI,KAAM/B,KAAKe,MAAMgB,KACjB8I,gBAAc,EACdC,2BAAyB,EACzBC,yBAAuB,EACvBC,qBAxBU,SAAC1H,GAIXA,EAAE2H,eAAiB,GACrB,EAAKtI,SAAS,CAAE+G,kBAAkB,IA7Bd,SAAC3I,GAEvB,IAAaV,OAEgB6K,IAA1BnK,EAAM0I,aAAa,KACpBpJ,EAAOwH,OAAOsD,KAAKpK,EAAM0I,aAAa,IAGtC,EAAK9G,SAAS,CACZ6G,KAAMzI,EAAM0I,aACZ9F,KAAMuG,IAAOnJ,EAAM0I,aAAa,GAAGpJ,GAAO,WAAW8J,OAAO,QAC5D9J,KAAM6J,MAASC,OAAO,SAAW9J,KAmBnC+K,CAAgB,EAAKrK,QAErB,EAAK4B,SAAS,CAAE+G,kBAAkB,KAiBhC2B,kBAAmBrL,KAAKe,MAAM2I,mBAGhC,0BAAMrG,SAAUrD,KAAKqD,UACnB,4BAAQmB,KAAK,UAAb,kB,GAhKiBhE,aCHN8K,E,uKAEjB,OACE,6BACE,kBAAC,EAAD,W,GAJgC9K,aCAnB8K,E,uKAGjB,OACE,6BACE,kBAAC,EAAD,CAAgBlK,MAAOpB,KAAKC,MAAMsL,MAAMC,OAAOlF,a,GALf9F,aCAnBiL,G,kDACjB,WAAYxL,GAAQ,IAAD,uBACf,cAAMA,IAcViE,gBAAkB,SAAAC,GACd,EAAKxB,SAAL,eAAgBwB,EAAMC,OAAOlE,KAAOiE,EAAMC,OAAOC,SAhBlC,EAmBnBmD,gBAAkB,SAAArD,GACdA,EAAMZ,iBAEN,IAAMmI,EAAW,CACbhE,UAAW,EAAK3G,MAAM2G,UACtBC,SAAU,EAAK5G,MAAM4G,SACrBZ,QAAQ,EAAKhG,MAAMgG,QACnBD,MAAM,EAAK/F,MAAM+F,MACjBO,SAAS,EAAKtG,MAAMsG,SACpBC,SAAS,EAAKvG,MAAMsI,GACpBsC,MAAO,EAAK5K,MAAM4K,OAEtBlK,QAAQC,IAAIgK,GAEZ/J,IAAMC,KAAK,yCACP8J,GAED7J,MAAK,SAAAC,GACLL,QAAQC,IAAII,GACbL,QAAQC,IAAII,EAAIC,SACfC,OAAM,SAAAC,GAAG,OAAIR,QAAQS,MAAMD,OArC9B,IAAM0J,EAAQ,EAAK1L,MAAM0F,KAAKG,SAFf,OAIf,EAAK/E,MAAQ,CACT4K,MAAOA,EACPjE,UAAW,GACXC,SAAS,GACTZ,QAAQ,GACRD,MAAM,GACNO,SAAS,GACTgC,GAAG,IAXQ,E,qDA6Cf,OACI,yBAAKlJ,GAAG,mBACJ,gDACA,0BAAMkD,SAAUrD,KAAKwH,iBACjB,yBAAKzH,UAAU,cACf,2BAAOgI,QAAQ,aAAf,cACA,2BAAO7H,KAAK,YAAYsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAM2G,aAE5F,6BACA,yBAAK3H,UAAU,cACf,2BAAOgI,QAAQ,YAAf,aACA,2BAAO7H,KAAK,WAAWsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAM4G,YAE3F,6BACA,yBAAK5H,UAAU,cACf,2BAAOgI,QAAQ,YAAf,YACA,2BAAO7H,KAAK,WAAWsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAMsG,YAE3F,6BACA,yBAAKtH,UAAU,cACf,2BAAOgI,QAAQ,WAAf,WACA,2BAAO7H,KAAK,UAAUsE,KAAK,OAAOD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAMgG,WAE1F,6BACA,yBAAKhH,UAAU,cACf,2BAAOgI,QAAQ,SAAf,SACA,2BAAO7H,KAAK,QAAQsE,KAAK,QAAQD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAM+F,SAEzF,6BAEA,yBAAK/G,UAAU,cACf,2BAAOgI,QAAQ,MAAf,YACA,2BAAO7H,KAAK,KAAKsE,KAAK,WAAWD,SAAUvE,KAAKkE,gBAAiBO,YAAazE,KAAKe,MAAMsI,MAEzF,6BACA,6BACA,6BACA,6BACA,2BAAO7E,KAAK,iB,GApFShE,aCwD1BoL,G,kDApCb,aAAe,IAAD,8BACZ,gBACK7K,MAAQ,CACT4E,KAAM,CACJG,SAAU,OACVF,SAAU,UALJ,E,qDAUN,IAAD,OAEP,OACE,kBAAC,IAAD,CAAU8C,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAK3I,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO8L,OAAK,EAACC,KAAK,aAAaC,UAAW,kBAAM,kBAAC,EAAD,CAAWpG,KAAO,EAAK5E,MAAM4E,UAC7E,kBAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,gBAAgBC,UAAW,kBAAM,kBAAC,EAAD,CAAcpG,KAAQ,EAAK5E,MAAM4E,UACpF,kBAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,eAAeC,UAAW,kBAAM,kBAAC,EAAD,CAASpG,KAAO,EAAK5E,MAAM4E,UAC7E,kBAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,oBAAoBC,UAAWC,IACjD,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,oBAAoBC,UAAW/D,IACjD,kBAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,UAAUC,UAAW3I,IACvC,kBAAC,IAAD,CAAOyI,OAAK,EAACC,KAAK,iBAAiBC,UAAWhH,IAC9C,kBAAC,IAAD,CAAO8G,OAAK,EAACC,KAAK,UAAUC,UAAWT,IACvC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,uBAAuBC,UAAWE,IACpD,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,eAAeC,UAAW,kBAAM,kBAAC,GAAD,CAAapG,KAAQ,EAAK5E,MAAM4E,UAClF,kBAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,YAAYC,UAAWzC,IACzC,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,SAASC,UAAWG,IACtC,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,YAAYC,UAAWI,W,GA9BjC3L,aCVE4L,QACW,cAA7B/J,OAAOC,SAAS+J,UAEe,UAA7BhK,OAAOC,SAAS+J,UAEhBhK,OAAOC,SAAS+J,SAASd,MACvB,2DCZNe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmB/D,WACrBA,UAAUgE,cAAcC,MACrB/K,MAAK,SAAAgL,GACJA,EAAaC,gBAEd9K,OAAM,SAAAE,GACLT,QAAQS,MAAMA,EAAM6K,c","file":"static/js/main.1649a4af.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../../css/ResultsItem.css'\r\n\r\nclass ResultsItem extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"resultItem\">\r\n                <h2>Employee: {this.props.name}</h2>\r\n                <p id='desc'>Service: {this.props.desc}</p>\r\n                <p id='date'>Date: {this.props.date}</p>\r\n                <p id='start'>Start: {this.props.start}</p>\r\n                <p id='end'>End: {this.props.end}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultsItem;","import React, { Component } from 'react'\r\nimport SearchResultsItem from './ResultsItem'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport axios from 'axios'\r\nconst createHistory = require(\"history\").createBrowserHistory;\r\n\r\nclass SearchResultsList extends Component {\r\n\r\n    // findPath(item) {        \r\n    //     return item.empID  + '/workinghours';            \r\n    // }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onBook = this.onBook.bind(this)\r\n\r\n        this.state = {\r\n            count: 0 \r\n            // redirect: false\r\n        }\r\n    }\r\n    onBook(item) {\r\n    \r\n        // need to validate !!!!!!!!\r\n        \r\n        const booking = {\r\n          custID: \"cus5\",\r\n          empID: item.empID,\r\n          bookingTime: item.startTime,\r\n          bookingDate: item.workDate\r\n        }\r\n    \r\n        console.log(\"booking: \", booking);\r\n    \r\n        axios.post('http://localhost:8080/api/booking/add', \r\n                booking\r\n              )\r\n              .then(res => //showOutput(res))\r\n                {\r\n                    console.log(\"data:\", res.data);\r\n                    \r\n                }\r\n                )\r\n              .catch(err => console.error(\"error: \", err));\r\n    \r\n        // redirect to upcoming bookings page or dashboard here\r\n        // return <Redirect to=\"localhost:3000/upcomingBookings\"></Redirect>\r\n\r\n        let history = createHistory();\r\n        history.push(\"../upcomingBookings\");\r\n        let pathUrl = window.location.href;\r\n        window.location.href = pathUrl;  \r\n    }\r\n    \r\n    listCount(){\r\n        console.log(\"map\", this.props.list.map);\r\n        let newCount = this.state.count + 1\r\n        this.setState({\r\n            count: newCount\r\n        });\r\n\r\n        return this.state.count;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"resultsList\">\r\n                <React.Fragment>\r\n                {this.props.list.map((item, index) => (\r\n                        <Link key={index} onClick={() => {this.onBook(item)}} to=\"/\" className=\"btn btn-lg btn-info\">\r\n                            <SearchResultsItem name={item.empID}\r\n                            key={this.listCount}\r\n                            desc={item.service}\r\n                            date={item.workDate}\r\n                            start={item.startTime}\r\n                            end={item.endTime}/>\r\n                        </Link>\r\n                    \r\n                ))}\r\n                </React.Fragment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResultsList;","import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\nimport '../../css/Searchbar.css'\r\nimport Results from './ResultsList';\r\n\r\nclass Searchbar extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            custID: 'cust5',\r\n            service: '',\r\n            location: '',\r\n            worker: '',\r\n            time: '',\r\n            date: '',\r\n            loading: false,\r\n            searched: false,\r\n            results: null,\r\n            value:''\r\n        };\r\n    }\r\n\r\n\r\n    validate() {\r\n        return true;\r\n    }\r\n\r\n    onSubmit = e => {\r\n\r\n        e.preventDefault();\r\n        this.state.searched = true;\r\n\r\n        const searchQuery = {\r\n            service: this.state.service,\r\n            location: this.state.location,\r\n            worker: this.state.worker,\r\n            time: this.state.time,\r\n            date:this.state.date\r\n        }\r\n        \r\n        console.log(searchQuery);\r\n\r\n        // Validation\r\n\r\n        if(this.validate()) {\r\n            // this.props.history.push('/searchResults');\r\n            const empID = this.state.worker\r\n            const service = this.state.service\r\n            const url = 'http://localhost:8080/api/workinghours/list/' + empID + '/' + service\r\n            this.setState({ loading: true });\r\n            axios.get(url, {\r\n            // headers: { 'Authorization': authorization }\r\n            })\r\n            .then(res => {\r\n                console.log(res.data)\r\n                this.setState({\r\n                results: res.data,\r\n                loading: false,\r\n                searched: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error\",error)\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Invalid search\");\r\n        }\r\n    }\r\n\r\n    myChangeHandler = event => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    get results() {\r\n        let results;\r\n        if (this.state.searched){\r\n            results = <h1>There's no available slots</h1>;\r\n        }\r\n        \r\n        if (this.state.results) {\r\n          results = <Results list={this.state.results} />;\r\n        }\r\n    \r\n        return results;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p id='search-label'>Service Booking Availability</p>\r\n                <form action='' onSubmit={ this.onSubmit }>\r\n                    <input \r\n                    name= \"service\"\r\n                    value = { this.state.service }\r\n                    onChange={this.myChangeHandler}\r\n                    type='text' \r\n                    placeholder='Service' \r\n                    pattern='[A-Za-z]+' \r\n                    required='required'\r\n                    title='Alphabetical characters only'/>\r\n\r\n                    <input \r\n                    name= \"location\"\r\n                    value = { this.state.location }\r\n                    onChange={this.myChangeHandler}\r\n                    type='text' \r\n                    placeholder='Location' \r\n                    pattern='[A-Za-z]+' \r\n                    required='required'\r\n                    title='Alphabetical characters only'/>\r\n\r\n                    <input \r\n                    name= \"worker\"\r\n                    value = { this.state.worker }\r\n                    onChange={this.myChangeHandler}\r\n                    type='text' \r\n                    placeholder='Worker' \r\n                    required='required'\r\n                    //pattern='[A-Za-z]+' \r\n                    title='Alphabetical characters only'/>\r\n\r\n                    <input\r\n                    name= \"time\" \r\n                    value = { this.state.time }\r\n                    onChange={this.myChangeHandler}\r\n                    type='time' \r\n                    placeholder='Time' \r\n                    required='required'/>\r\n\r\n                    <input \r\n                    name= \"date\"\r\n                    value = { this.state.date }\r\n                    onChange={this.myChangeHandler}\r\n                    type='date' \r\n                    placeholder='Time' \r\n                    required='required'\r\n                    ref={this.dateRef}\r\n                    // onChange={validateDate}\r\n                    />\r\n                    <button type='submit'>Search</button>\r\n                </form>\r\n                {this.results}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Searchbar;","import React, { Component } from 'react'\r\nimport ResultsList from './ResultsList'\r\n\r\nclass SearchPage extends Component {\r\n\r\n\r\n  render() {\r\n\r\n    const results = {\r\n      0: {\r\n        businessName: \"A1 Cuts\",\r\n        desc: \"Upscale hair salon offering a wide range of services that include cutting, perming, colouring, blow drying, etc.\",\r\n        },\r\n      1: {\r\n        businessName: \"John's Garage\",\r\n        desc: \"If you're looking for quality automotive repairs a step above the rest, come to John's Garage!\"\r\n      },\r\n      2: {\r\n        businessName: \"Oz Garden Services\",\r\n        desc: \"Call Oz Garden Services Melbourne to come over and take care of your garden & home maintenance.\"\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <ResultsList results={ results }/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from 'react'\r\nimport {link, Link} from \"react-router-dom\";\r\n\r\n const PastBookingsButton=() => {\r\n    return (\r\n        <React.Fragment>\r\n        <Link to=\"/pastBookings\"\r\n        className=\"btn btn-lg btn-info\">\r\n        View Past Bookings\r\n        </Link>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default PastBookingsButton;","import React from 'react'\r\nimport {link, Link} from \"react-router-dom\";\r\n\r\n const UpcomingBookingsButton=() => {\r\n    return (\r\n        <React.Fragment>\r\n        <Link to=\"/upcomingBookings\"\r\n        className=\"btn btn-lg btn-info\">\r\n        View Upcoming Bookings\r\n        </Link>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default UpcomingBookingsButton;\r\n","import React from 'react'\r\nimport {link, Link} from \"react-router-dom\";\r\n\r\n const SearchPageButton=() => {\r\n    return (\r\n        <React.Fragment>\r\n        <Link to=\"/search\"\r\n        className=\"btn btn-lg btn-info\">\r\n        Make a Booking\r\n        </Link>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default SearchPageButton;","import React from 'react'\r\nimport {link, Link} from \"react-router-dom\";\r\n\r\n const AddEmployeeButton=() => {\r\n    return (\r\n        <React.Fragment>\r\n        <Link to=\"/addEmployee\"\r\n        className=\"btn btn-lg btn-info\">\r\n        Add Employee\r\n        </Link>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default AddEmployeeButton;","import React, { Component } from 'react'\r\nimport PastBookingsButton from './Bookings/PastBookingsButton';\r\nimport UpcomingBookingsButton from './Bookings/UpcomingBookingsButton';\r\nimport SearchPageButton from './SearchAvailability/SearchPageButton';\r\nimport AddEmployeeButton from './AddEmployee/AddEmployeeButton';\r\nimport {link, Link} from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        var button;\r\n        if(this.props.user.userType === 'admin') {\r\n            button = <AddEmployeeButton />;\r\n        }\r\n        return (\r\n            <div className=\"Dashboard\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"display-4 text-center\">Dashboard</h1>\r\n                        <br />\r\n                        <Link to={{\r\n                          pathname: `/profile/${this.props.user.username}` \r\n                        }} \r\n                          className=\"btn btn-lg btn-info\" >\r\n                        Profile\r\n                       </Link>\r\n                        <br />\r\n                        <br />\r\n                        <UpcomingBookingsButton />\r\n                        <br />\r\n                        <br />\r\n                        <PastBookingsButton />\r\n                        <br />\r\n                        <br />\r\n                        <SearchPageButton />\r\n                        <br />\r\n                        <br />\r\n                        {button}\r\n                        <br />              \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        )\r\n    }\r\n}\r\nexport default Dashboard;","import React, { Component } from 'react'\r\nimport styles from '../../css/Styles.css'\r\n\r\n\r\n class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <nav className = \"navbar navbar-expand-md navbar-light\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand\" href=\"/dashboard\">\r\n                <img src = {styles.icon}/>\r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n    \r\n                <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link \" href=\"register\">\r\n                                Sign Up\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"login\">\r\n                                Login\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react'\r\n\r\nclass PastBookingsItem extends Component {\r\n    render() {\r\n        return (\r\n            <tr>\r\n            <td id = 'empID'>{this.props.empId}</td>\r\n            <td id='date'>{this.props.date}</td>\r\n            <td id='time'>{this.props.time}</td>\r\n            <td id='status'>{this.props.status}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PastBookingsItem;\r\n","import PastBookingsItem from '../../components/Bookings/PastBookingsItem'\r\nimport axios from \"axios\";\r\nimport React, { Component } from 'react'\r\n\r\n\r\nclass PastBookings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookings: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const uname = this.props.user.username;\r\n        //change to /pastBooking later\r\n        const url = 'http://localhost:8080/api/booking/pastBookings/list/' + uname;\r\n        axios.get(url, {\r\n            // headers: { 'Authorization': authorization }\r\n          })\r\n          .then(res => {\r\n            this.setState({\r\n              bookings: res.data\r\n            })\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"error\",error)\r\n          })    \r\n    }\r\n\r\n \r\n    \r\n    render() {\r\n        let hasBookings = this.state.bookings;\r\n        const results = () => {\r\n            if(hasBookings !== null) {\r\n                return  <table className = \"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Worker</th>\r\n                            <th>Date</th>\r\n                            <th>Time</th>\r\n                            <th>Status</th>\r\n                        </tr> \r\n                    </thead>\r\n                    <tbody>\r\n                    {                     \r\n                        this.state.bookings.map((result, index) => (\r\n                            <PastBookingsItem key= {index} empId = {result.empID }\r\n                            date = {result.bookingDate}\r\n                            time = {result.bookingTime}\r\n                            //no service for now\r\n                            status = {result.bookingStatus}/>\r\n                        ))\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            } else {\r\n                return <h1>You have no past bookings</h1>\r\n            }\r\n        \r\n        }\r\n        return (\r\n                <div>\r\n                <h5 className=\"display-4 text-center\">Past Bookings</h5> \r\n                    {results()}\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PastBookings;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {link, Link} from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Profile for {props.username}</h1>\r\n      <hr/>\r\n      <ul >\r\n        <li key=\"name\">Name: {props.name}</li>\r\n        <li key=\"phone\">Phone: {props.phone}</li>\r\n        <li key=\"address\">Address: {props.address}</li>\r\n      </ul>\r\n      <hr/>\r\n      <br />\r\n      <Link to={{\r\n        pathname: `/profile/${props.username}/edit`\r\n      }} \r\n        className=\"btn btn-lg btn-info\" >\r\n      Edit Details\r\n     </Link>\r\n      <br />\r\n    </div>\r\n  )\r\n};\r\n\r\nProfile.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  address: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\nimport Profile from './Profile'\r\n\r\nclass ProfilePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            uname:'cus6',\r\n            profile: {\r\n            fname: '',\r\n            lname:'',\r\n            name:'',\r\n            address:'',\r\n            phone:'',\r\n            userName:'',\r\n            password:'',\r\n            status:'',\r\n            data: {}\r\n            }\r\n        }\r\n      }\r\n\r\n      componentDidMount(){\r\n        // const authorization = \"Some Name\" + cookie.load('token').replace(\"JWT\",\"\")\r\n          // var id = props.match.params.id;\r\n          const uname = this.props.user.username;\r\n          const url = 'http://localhost:8080/api/customer/' + uname\r\n          axios.get(url, {\r\n            // headers: { 'Authorization': authorization }\r\n          })\r\n          .then(res => {\r\n            this.setState({\r\n              profile: res.data\r\n            })\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"error\",error)\r\n          })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"profile_page\">\r\n            {\r\n                    <Profile\r\n                    username={this.state.profile.userName}\r\n                    name={this.state.profile.name}\r\n                    address={this.state.profile.address}\r\n                    phone={this.state.profile.phone}\r\n                    />\r\n            }\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfilePage;","import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\nimport '../../css/Form.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ProfileEditPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            uname: 'cus5',\r\n            profile: {\r\n            firstName: '',\r\n            lastName:'',\r\n            name:'',\r\n            address:'',\r\n            phone:'',\r\n            userName:'',\r\n            password:'',\r\n            status:'',\r\n            data: {}\r\n            }\r\n        }\r\n        this.myChangeHandler = this.myChangeHandler.bind(this);\r\n        this.mySubmitHandler = this.mySubmitHandler.bind(this);\r\n      }\r\n      \r\n      componentDidMount(){\r\n        // const authorization = \"Some Name\" + cookie.load('token').replace(\"JWT\",\"\")\r\n          const uname = this.state.uname\r\n          const url = 'http://localhost:8080/api/customer/' + uname\r\n          axios.get(url, {\r\n            \r\n            // headers: { 'Authorization': authorization }\r\n          })\r\n          .then(res => {\r\n            // this.setState({\r\n            //   profile: res.data\r\n            // })\r\n            this.setState({\r\n              profile: Object.assign({}, this.state.profile, res.data),\r\n            });\r\n            console.log(\"profile\",res.data)\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"error\",error)\r\n          })\r\n      }\r\n\r\n    mySubmitHandler = event => {\r\n        event.preventDefault();\r\n    \r\n        const customer = {\r\n            firstName: this.state.profile.firstName,\r\n            lastName:this.state.profile.lastName,\r\n            name: this.state.profile.firstName + \" \" + this.state.profile.lastName,\r\n            address:this.state.profile.address,\r\n            phone:this.state.profile.phone,\r\n            userName:this.state.profile.userName,\r\n            password:this.state.profile.password\r\n        }\r\n        console.log(customer);\r\n    \r\n        axios.put('http://localhost:8080/api/customer/update', \r\n            customer\r\n          )\r\n          .then(res => //showOutput(res))\r\n          {console.log(res);\r\n          console.log(res.data);})\r\n          .catch(err => console.error(err));\r\n    }\r\n    \r\n    myChangeHandler = event => {\r\n      this.setState({\r\n        profile: Object.assign({}, this.state.profile, {\r\n        [event.target.name]: event.target.value,\r\n        }),\r\n      });\r\n      // this.setState({profile: {[event.target.name]: event.target.value}})\r\n      // console.log(\"event\", event)\r\n      // console.log(\"profile\", this.state.profile)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"register_form\">\r\n                <h1>Update Details Form</h1>\r\n                <form onSubmit={this.mySubmitHandler}>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input name=\"firstName\" type='text' onChange={this.myChangeHandler} placeholder={this.state.profile.firstName}\r\n                    value={this.state.profile.firstName}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input name=\"lastName\" type='text' onChange={this.myChangeHandler} placeholder={this.state.profile.lastName}\r\n                    value={this.state.profile.lastName}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input name=\"address\" type='text' onChange={this.myChangeHandler} placeholder={this.state.profile.address}\r\n                    value={this.state.profile.address}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                    <input name=\"phone\" type='Phone' onChange={this.myChangeHandler} placeholder={this.state.profile.phone}\r\n                    value={this.state.profile.phone}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"userName\">Username</label>\r\n                    <input name=\"userName\" type='text' onChange={this.myChangeHandler} placeholder={this.state.profile.userName}\r\n                    value={this.state.profile.userName}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"pw\">Password</label>\r\n                    <input name=\"pw\" type='password' onChange={this.myChangeHandler} placeholder={this.state.profile.password}\r\n                    value={this.state.profile.password}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"pwConfirm\">Confirm Password</label>\r\n                    <input name=\"pwConfirm\" type='password' onChange={this.myChangeHandler} value={this.state.profile.password}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <hr></hr>\r\n                    <br></br>\r\n                    <input type='submit'/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileEditPage;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default class UpcomingBookings extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            results: []\r\n        }\r\n\r\n        this.getBookings();\r\n    }\r\n\r\n    getBookings = e => {\r\n        const custId = 'cus5'\r\n        const url = 'http://localhost:8080/api/booking/upcomingBookings/list/' + custId\r\n        this.setState({ loading: true });\r\n        axios.get(url, {\r\n        // headers: { 'Authorization': authorization }\r\n        })\r\n        .then(res => {\r\n            \r\n            this.setState({\r\n            results: res.data,\r\n            loading: false,\r\n            searched: true\r\n            }, () => {\r\n                console.log(\"Got bookings:\", this.state.results)\r\n                this.forceUpdate()\r\n            })\r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error\",error)\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n            <h5 className=\"display-4 text-center\">Upcoming Bookings</h5>  \r\n            {              \r\n                this.state.results.map((booking, index) => (\r\n                    <ul> \r\n                        <li key={index}>\r\n                            <p id = 'empID'><b>Employee ID: </b>{booking['empID']}</p>\r\n                            <p id='serviceID'><b>Service ID: </b>{booking['id']}</p>\r\n                            <p id='date'><b>Date: </b>{booking['bookingDate']}</p>\r\n                            <p id='time'><b>Time:</b>{booking['bookingTime']}</p>\r\n                            <p id='status'><b>Status: </b>{booking['bookingStatus']}</p>\r\n                        </li>\r\n                        <br/>\r\n                    </ul>\r\n                ))\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer\r\n});\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\")) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n     \r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from 'react'\r\nimport '../../css/Form.css'\r\n\r\nclass LoginForm extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login Form</h1>\r\n                <div>\r\n                    <form onSubmit={this.mySubmitHandler}>\r\n                    <div>\r\n                    <label for=\"uname\">UserName: </label>\r\n                    <input name=\"uname\" type='text' onChange={this.myChangeHandler} />\r\n                    </div>\r\n                    <div>\r\n                    <label for=\"pw\">Password: </label>\r\n                    <input name=\"pw\" type='password' onChange={this.myChangeHandler} />\r\n                    </div>\r\n                    <p>User Type:</p>\r\n                    <input type=\"radio\" id=\"admin\" name=\"userType\" value=\"admin\" />\r\n                    <label for=\"admin\">Admin</label><br></br>\r\n                    <input type=\"radio\" id=\"worker\" name=\"userType\" value=\"emp\" />\r\n                    <label for=\"worker\">Worker</label><br></br>\r\n                    <input type=\"radio\" id=\"customer\" name=\"userType\" value=\"cust\" />\r\n                    <label for=\"customer\">Customer</label>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <hr></hr>\r\n                    <br></br>\r\n                    <input type='submit'/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\nimport '../../css/Form.css'\r\n\r\nclass RegisterForm extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            //customerDetails: []\r\n            fname: '',\r\n            lname:'',\r\n            address:'',\r\n            phone:'',\r\n            uname:'',\r\n            pw:''\r\n        };\r\n    }\r\n\r\n    mySubmitHandler = event => {\r\n        event.preventDefault();\r\n    \r\n        const customer = {\r\n            firstName: this.state.fname,\r\n            lastName:this.state.lname,\r\n            address:this.state.address,\r\n            phone:this.state.phone,\r\n            userName:this.state.uname,\r\n            password:this.state.pw\r\n        }\r\n        console.log(customer);\r\n    \r\n        axios.post('http://localhost:8080/api/customer/add', \r\n            customer\r\n          )\r\n          .then(res => //showOutput(res))\r\n          {console.log(res);\r\n          console.log(res.data);})\r\n          .catch(err => console.error(err));\r\n    }\r\n    \r\n    myChangeHandler = event => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"register_form\">\r\n                <h1>Register New Customer Form</h1>\r\n                <form onSubmit={this.mySubmitHandler}>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"fname\">First Name:</label>\r\n                    <input name=\"fname\" type='text' onChange={this.myChangeHandler} value={this.state.fname}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"lname\">Last Name</label>\r\n                    <input name=\"lname\" type='text' onChange={this.myChangeHandler} value={this.state.lname}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input name=\"address\" type='text' onChange={this.myChangeHandler} value={this.state.address}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                    <input name=\"phone\" type='Phone' onChange={this.myChangeHandler} value={this.state.phone}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"uname\">Username</label>\r\n                    <input name=\"uname\" type='text' onChange={this.myChangeHandler} value={this.state.uname}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"pw\">Password</label>\r\n                    <input name=\"pw\" type='password' onChange={this.myChangeHandler} value={this.state.pw}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"pwConfirm\">Confirm Password</label>\r\n                    <input name=\"pwConfirm\" type='password' onChange={this.myChangeHandler} />\r\n                    </div>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <hr></hr>\r\n                    <br></br>\r\n                    <input type='submit'/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;","import React, { Component } from 'react'\r\n\r\nclass Homepage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1>About Us</h1>\r\n                    <p>Some text</p>\r\n                </div>\r\n                <div>\r\n                    <h1>Contact Us</h1>\r\n                    <p>Some more text</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React, { Component } from 'react'\r\nimport '../../css/WeekCalendar.css'\r\nimport DataTable from 'react-data-table-component';\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\n\r\nclass WeekCalendar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      time:'',\r\n      date:'',\r\n      rows:'',\r\n      selectedRows: [],\r\n      toggledClearRows: false,\r\n      data: [],\r\n      empId:this.props.empID,\r\n      workingHours: [],\r\n    };\r\n\r\n    // this.setState({empId: window.location.pathname.substr(1, window.location.pathname.length-14)})\r\n  }\r\n\r\n  componentDidMount(){\r\n    // const authorization = \"Some Name\" + cookie.load('token').replace(\"JWT\",\"\")\r\n      // var id = props.match.params.id;\r\n      // const empId = {this.props.name}\r\n      // const empId = window.location.pathname.substr(1, window.location.pathname.length-14)\r\n      const empId = this.state.empId;\r\n      const url = 'http://localhost:8080/api/workinghours/list/' + empId\r\n      axios.get(url, {\r\n        // headers: { 'Authorization': authorization }\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          workingHours: res.data\r\n        }, () => {\r\n          console.log(this.state.workingHours)\r\n          this.convertData(this.state.workingHours)\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\",error)\r\n      })\r\n      this.setState({empId: empId})\r\n  }\r\n\r\n  // Convert the database result into an \r\n  // interpretable object for the data table\r\n  convertData(dataSet) {\r\n    let newData = [];\r\n\r\n    for(let i = 0; i < dataSet.length; i++) {\r\n  \r\n      let day = moment(dataSet[i][\"workDate\"]).format(\"D/M/YYYY\").substr(0,2);\r\n      let date;\r\n      // console.log(day)\r\n  \r\n      if(parseInt(day) > 10) {\r\n        date = moment(dataSet[i][\"workDate\"]).format(\"D/M/YYYY\").substr(0,4);\r\n      }\r\n      else {\r\n        date = moment(dataSet[i][\"workDate\"]).format(\"D/M/YYYY\").substr(0,3);\r\n      }\r\n  \r\n      newData.push({[date]: moment(dataSet[i][\"startTime\"], \"HH:mm\").format(\"h:mm A\") +\r\n      \":\" + dataSet[i][\"service\"],\r\n      service: dataSet[i][\"service\"]});\r\n      \r\n    }\r\n    this.setState({data: newData})\r\n    // console.log(newData)\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    // need to validate !!!!!!!!\r\n    \r\n    const booking = {\r\n      custID: 1,\r\n      empID: this.state.empId,\r\n      bookingTime: this.state.time,\r\n      bookingDate: this.state.date,\r\n    }\r\n\r\n    // console.log(\"booking: \", booking);\r\n\r\n    axios.post('http://localhost:8080/api/booking/add', \r\n            booking\r\n          )\r\n          .then(res => //showOutput(res))\r\n          {console.log(res);\r\n          console.log(res.data);})\r\n          .catch(err => console.error(err));\r\n\r\n    // redirect to upcoming bookings page or dashboard here\r\n  }\r\n\r\n  render() {\r\n\r\n    // Columns in the table\r\n    // Each column is the date of the next seven days + current day\r\n    const columns = [\r\n      {\r\n        name: \"Today\",\r\n        selector: String(moment().date() + \"/\" + (moment().month()+1)),\r\n        sortable: false,\r\n      },\r\n    ];\r\n\r\n    const handleSelection = (state) => {\r\n\r\n      let booking, date;\r\n\r\n      if(state.selectedRows[0] !== undefined) {\r\n        date = Object.keys(state.selectedRows[0]);\r\n     \r\n\r\n        this.setState({\r\n          rows: state.selectedRows,\r\n          time: moment(state.selectedRows[0][date], \"hh:mm A\").format(\"HHmm\"),\r\n          date: moment().format('yyyy/') + date\r\n        });\r\n      }\r\n    }\r\n\r\n    for(let i = 1; i < 8; i++) {\r\n      columns.push({\r\n        name: moment().date() + i + \"/\" + (moment().month()+1),\r\n        selector: String(moment().date() + i + \"/\" + (moment().month()+1)),\r\n        sortable: false,\r\n      },);\r\n    }\r\n\r\n    const onClick = (e) => {\r\n      // console.log(\"data\", this.state.data)\r\n      // e.preventDefault();\r\n      // console.log(\"event\", e)\r\n      if (e.selectedCount <= 1){\r\n        this.setState({ toggledClearRows: false })\r\n        handleSelection(this.state)\r\n      }else{\r\n        this.setState({ toggledClearRows: true }); \r\n        // alert(\"Unselect previous booking before selecting another time\")\r\n      }\r\n      \r\n    }\r\n\r\n    return (\r\n      <div>\r\n      <h1 id=\"empID\" style={{display:'none'}}>{this.props.empID}</h1>\r\n        <DataTable\r\n          title=\"This Week\"\r\n          columns={columns}\r\n          data={this.state.data}\r\n          selectableRows\r\n          selectableRowsNoSelectAll\r\n          selectableRowsHighlight\r\n          onSelectedRowsChange={onClick}\r\n          clearSelectedRows={this.state.toggledClearRows}\r\n        />\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <button type='submit' >Book Now</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default WeekCalendar","import React, { Component } from 'react'\r\nimport WorkerCalendar from '../WeekCalendar/WeekCalendar'\r\n\r\nexport default class WorkerPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <WorkerCalendar />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport WorkerCalendar from '../WeekCalendar/WeekCalendar'\r\n\r\nexport default class WorkerPage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <WorkerCalendar empID={this.props.match.params.empId} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\n\r\nexport default class AddEmployee extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const admin = this.props.user.username;\r\n\r\n        this.state = {\r\n            admin: admin,\r\n            firstName: '',\r\n            lastName:'',\r\n            address:'',\r\n            phone:'',\r\n            userName:'',\r\n            pw:''\r\n        };\r\n    }\r\n\r\n    myChangeHandler = event => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    };\r\n\r\n    mySubmitHandler = event => {\r\n        event.preventDefault();\r\n    \r\n        const employee = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            address:this.state.address,\r\n            phone:this.state.phone,\r\n            userName:this.state.userName,\r\n            password:this.state.pw,\r\n            admin: this.state.admin\r\n        }\r\n        console.log(employee);\r\n    \r\n        axios.post('http://localhost:8080/api/employee/add', \r\n            employee\r\n          )\r\n          .then(res => //showOutput(res))\r\n          {console.log(res);\r\n          console.log(res.data);})\r\n          .catch(err => console.error(err));\r\n    }\r\n    \r\n    render() {\r\n        // admin validation\r\n\r\n        return (\r\n            <div id=\"addEmployeeForm\">\r\n                <h1>Add New Employee</h1>\r\n                <form onSubmit={this.mySubmitHandler}>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input name=\"firstName\" type='text' onChange={this.myChangeHandler} placeholder={this.state.firstName}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input name=\"lastName\" type='text' onChange={this.myChangeHandler} placeholder={this.state.lastName}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"userName\">Username</label>\r\n                    <input name=\"userName\" type='text' onChange={this.myChangeHandler} placeholder={this.state.userName}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"address\">Address</label>\r\n                    <input name=\"address\" type='text' onChange={this.myChangeHandler} placeholder={this.state.address}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"phone\">Phone</label>\r\n                    <input name=\"phone\" type='Phone' onChange={this.myChangeHandler} placeholder={this.state.phone}/>\r\n                    </div>\r\n                    <br></br>\r\n\r\n                    <div className='form-group'>\r\n                    <label htmlFor=\"pw\">Password</label>\r\n                    <input name=\"pw\" type='password' onChange={this.myChangeHandler} placeholder={this.state.pw}/>\r\n                    </div>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <hr></hr>\r\n                    <br></br>\r\n                    <input type='submit'/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router,Route } from 'react-router-dom';\r\nimport Searchbar from './components/SearchAvailability/Searchbar';\r\nimport SearchPage from './components/SearchAvailability/SearchPage';\r\nimport Dashboard from './components/Dashboard';\r\nimport Header from './components/Layout/Header';\r\nimport PastBookings from './components/Bookings/PastBookings';\r\nimport Profile from \"./components/Profile/ProfilePage\";\r\nimport ProfileEdit from \"./components/Profile/ProfileEditPage\";\r\nimport UpcomingBookings from \"./components/Bookings/UpcomingBookings\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from './store';\r\nimport Login from './components/Login/LoginForm';\r\nimport Register from './components/Register/RegisterForm';\r\nimport Homepage from './components/Homepage/Homepage'\r\nimport WorkerPage from './components/Worker/WorkerPage'\r\nimport WorkerBooking from './components/Bookings/WorkerBooking';\r\nimport AddEmployee from './components/AddEmployee/AddEmployee';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        user: {\r\n          username: 'cus5',\r\n          userType: 'admin'\r\n        }\r\n    }\r\n  }\r\n\r\nrender() {\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Route exact path=\"/dashboard\" component={() => <Dashboard user= {this.state.user}/>}  />\r\n          <Route exact path=\"/pastBookings\" component={() => <PastBookings user = {this.state.user}/>} />\r\n          <Route exact path=\"/profile/:id\" component={() => <Profile user= {this.state.user}/>} />\r\n          <Route exact path=\"/profile/:id/edit\" component={ProfileEdit} />\r\n          <Route exact path=\"/upcomingBookings\" component={UpcomingBookings} />\r\n          <Route exact path=\"/search\" component={Searchbar} />\r\n          <Route exact path=\"/searchResults\" component={SearchPage} />\r\n          <Route exact path=\"/worker\" component={WorkerPage} />\r\n          <Route exact path=\"/:empId/workinghours\" component={WorkerBooking} />\r\n          <Route exact path=\"/addEmployee\" component={() => <AddEmployee user = {this.state.user} />} />\r\n          <Route exact path=\"/homepage\" component={Homepage} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n"," import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}